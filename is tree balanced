/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

    
class Solution {
public:
    int height(TreeNode* &root, int& balanced) {
        if (root == nullptr) {
            return 0;
        }
        
        int leftHeight = height(root->left, balanced);
        int rightHeight = height(root->right, balanced);

        int balance =abs(rightHeight-leftHeight);
        if(balance>1){
            balanced=0;
        }

        return max(leftHeight, rightHeight)+1;
    }

public:
    // int balanced=0;
    bool isBalanced(TreeNode* root) {
        
        if(root==NULL){
            return 1;
        }
        int balanced=1;
        height(root, balanced);
        return balanced;
    }
};
